#!/bin/sh
ifconfig eth0 mtu 1420 | true
IS_OPENSSH=$(ssh -ver 2>&1 | grep OpenSSH)
IS_NEW_OPENSSH=$(ssh -V 2>&1 | grep OpenSSH)
IS_DROPBEAR=$(ssh -ver 2>&1 | grep Dropbear)
if [ -n "$IS_OPENSSH" ] || [ -n "$IS_NEW_OPENSSH" ]; then
  SSH_OPTIONS="-o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o ServerAliveInterval=30"
elif [ -n "$IS_DROPBEAR" ]; then
  SSH_OPTIONS="-y -K 30"
fi
cat > /bin/fogbow-autossh << EOL
#!/bin/sh
autossh() {
  while true; do
    REMOTE_PORT="\$(curl -X POST #TOKEN_HOST#:#TOKEN_HOST_HTTP_PORT#/token/#TOKEN_ID#)"
    if [ -z "\$REMOTE_PORT" ]; then
      echo "No remote port available for #TOKEN_ID#, will try again in 30 seconds"
      sleep 30
      continue
    fi
    echo "Starting tunnel in port \$REMOTE_PORT"
    
    OLD_IFS=$IFS              # save internal field separator
    IFS=":"                   # set it to ':'
    set -- $REMOTE_PORT       # make the result positional parameters
    IFS=$OLD_IFS              # restore IFS
    PORT=$1
    SSH_SERVER_PORT=$2
    
    echo "Command: ssh $SSH_OPTIONS -N -R 0.0.0.0:\$PORT:localhost:22 #TOKEN_ID#@#TOKEN_HOST# -p $SSH_SERVER_PORT"
    ssh $SSH_OPTIONS -N -R 0.0.0.0:\$PORT:localhost:22 #TOKEN_ID#@#TOKEN_HOST# -p $SSH_SERVER_PORT
    sleep 5
  done
}
autossh &
EOL
chmod +x /bin/fogbow-autossh
setsid /bin/fogbow-autossh
cat > /bin/create-fogbow-tunnel << EOL
#!/bin/sh
REMOTE_PORT=\$(curl -X POST #TOKEN_HOST#:#TOKEN_HOST_HTTP_PORT#/token/#TOKEN_ID#-\${1})
read PORT SSH_SERVER_PORT <<<$(IFS=":"; echo $REMOTE_PORT)read PORT SSH_SERVER_PORT <<<$(IFS=":"; echo $REMOTE_PORT)
ssh $SSH_OPTIONS -f -N -R 0.0.0.0:\$PORT:localhost:\${2} #TOKEN_ID#-\${1}@#TOKEN_HOST# -p SSH_SERVER_PORT
EOL
chmod +x /bin/create-fogbow-tunnel
